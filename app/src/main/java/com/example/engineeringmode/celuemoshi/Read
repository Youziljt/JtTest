// 策略模式


策略模式定义了一系列算法，并将每一个算法封装起来，而且使他们还可以相互替换。策略模式让算法独立于使用他的客户而独立变化。

//使用场景：
针对同一类型的问题的多种处理方式，仅仅是具体行为有差别时。
需要安全地封装多种同一类型的操作时。
出现同一抽象类有多个子类，而又需要使用if-else 或者 switch-case 来选择具体子类时。


//案例引入：
根据不同的交通方式计算不同的乘坐价格。

抽象一个接口 用来计算价格。