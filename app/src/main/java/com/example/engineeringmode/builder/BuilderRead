

/**

1 抽象类
构建基础的 Builder ： 提供具体的抽象方法，以及创建对象方法
2 抽象类
构建基础的 计算机类 （product角色） ： 提供set方法，参数
3 根据两个基础抽象类进行实现
首先可以继承product类  实现出 Macbook
然后可以继承builder类  实现出 MacBookBuilder
4 创建Director
5 test


**/


当一个类的构造函数参数个数超过4个，而且这些参数有些是可选的参数，考虑使用构造者模式。





